#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 1000000007

class segtree{
   public:

      vector<ll>seg;
      segtree(ll n){
          seg.resize(4*n);
      }

      void build(ll l, ll h, ll node, vector<ll>&a){
           if(l==h){
               seg[node]=a[l];
               return;
           }

           ll mid=(l+h)/2;
           build(l, mid, 2*node+1, a);
           build(mid+1, h, 2*node+2, a);
           seg[node]=min(seg[2*node+1],seg[2*node+2]);
      }

      void update(ll l, ll h, ll node, ll id, ll val, vector<ll>&a){
           if(l==h){
               seg[node]=val;
               a[id]=val;
               return;
           }

           ll mid=(l+h)/2;
           if(l<=id && id<=mid){
               update(l, mid, 2*node+1, id, val, a);
           }
           else{
               update(mid+1, h, 2*node+2, id, val, a);
           }
           seg[node]=min(seg[2*node+1],seg[2*node+2]);
      }

      ll query(ll l, ll h, ll node, ll from, ll to){
         if(from>h || to<l){
             return 1e12;
         }
         else if(from<=l && h<=to){
             return seg[node];
         }
         else{
             ll mid=(l+h)/2;
             return min(query(l, mid, 2*node+1, from, to), query(mid+1, h, 2*node+2, from, to));
         }
      }
};
int main(){ 
     ll n,q;
     cin>>n>>q;
     vector<ll>a(n);
     for(ll i=0; i<n; i++){
         cin>>a[i];
     }
     
     segtree s(n+5);
     s.build(0, n-1, 0, a);

     while(q--){
         ll type, x, y;
         cin>>type>>x>>y;

         if(type==2){
             x--,y--;
             ll p=s.query(0, n-1, 0, x, y);
             cout<<p<<endl;
         }
         else{
             x--;
             s.update(0, n-1, 0, x, y, a);
         }
     }
     return 0;
}
