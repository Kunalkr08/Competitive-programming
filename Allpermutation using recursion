//min max refers that the question is of binary search //
//Time Complexity is n!*n
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 1000000007
const int N = 2e5 + 5;
#define ff first
#define ss second
#define fr(i,n) for(ll i = 0; i<n; i++)
#define pb push_back
#define PI 3.141592653589793238462
#define set_bits __builtin_popcount
#define all(s) sort(s.begin(), s.end())
#define runf ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
int prime[32005];
ll f=0;
void allpermutation(map<ll,ll>&m, vector<ll>&a, vector<vector<ll>>&ans, vector<ll>&temp){
     if(a.size()==temp.size()){
         ans.pb(temp);
         return;
     }
     for(ll j=0; j<a.size(); j++){

         if(m.find(j)==m.end()){
            temp.pb(a[j]);
            m[j]++;
            allpermutation(m,a,ans,temp);
            m[j]--;
            if(m[j]==0){
               m.erase(j);
            }
            temp.pop_back();
         }
     }
}
int main() { 
     runf
     int n;
     cin>>n;
     vector<int>nums;
     int freq[n]={0};
     for(int i=0; i<n; i++){
        int x;
        cin>>x;
        nums.push_back(x);
     }
     vector<vector<int>>ans;
     vector<int>ds;
     allpermutation(ds, nums, ans, freq);
     for(int i=0; i<ans.size(); i++){
        for(int j=0; j<ans[i].size(); j++){
           cout<<ans[i][j]<<" ";
        }
        cout<<endl;
     }
     return 0;
}
